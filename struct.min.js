var struct=(function(){this.dataPocket={};this.getTeamsBy=function(arr,pro){Array.prototype.pull=pull;function pull(item){var a=[];a=this;var that=this;var temp;var index;(function(){for(var z=0;z<that.length;z++){if(that[z]===item){a[z]=temp;a[z]=a[0];a[0]=temp;index=z;z=that.length}}})();a.shift();(function(){if(index==0)return;temp=a[index-1];for(var y=index-1;y>0;y--){a[y]=a[y-1]}a[0]=temp})();return a}for(var _x_y=0;_x_y<arr.length;_x_y++){if(typeof(arr[_x_y])!="object"){console.error("数组参数格式错误！");return}if(arr[_x_y][pro]===undefined){console.error("该属性非公共属性！");return}}var temp=[];var i=0;function do1(arr){var stand=arr[0][pro];temp[i]=[];var indexs=[];for(var k=0;k<arr.length;k++){if(arr[k][pro]===stand){temp[i].push(arr[k]);indexs.push(arr[k])}}(function(){for(var j=0;j<indexs.length;j++){arr.pull(indexs[j])}})()}while(arr.length>0){do1(arr);i++}return temp}this.contact=function(ob){if(typeof(ob)!="object"){console.error("参数必须是对象！");return}for(var x in ob){this.dataPocket[x]=ob[x]}return this}this.deriveFind2D=function(ob,item){var Teams=[];var i=0;Teams[i]=[];function examOb(obArr){for(var x in obArr){if(typeof(obArr[x])=="object"){return true}}return false}(function(){for(var x in ob){Teams[0].push(ob[x])}})();while(examOb(Teams[i])){var _a=i+1;Teams[_a]=[];(function(){for(var x in Teams[i]){if(typeof(Teams[i][x])=="object"){for(var y in Teams[i][x]){Teams[_a].push(Teams[i][x][y])}}}})();i++}var totalIndexs=[];var _index=-1;(function(){for(var i=0;i<Teams.length;i++){for(var y=0;y<Teams[i].length;y++){if(JSON.stringify(Teams[i][y])===JSON.stringify(item)){_index++;totalIndexs.push({level:i,levelIndex:y,order:_index})}}}})();if(totalIndexs.length>0)return totalIndexs;else return _index}return this}).call({});struct.List=function List(){this.listSize=0;this.pos=1;this.dataStore=[];this.clear=function(){this.listSize=0;this.dataStore.length=0;this.pos=1;return this}this.print=function(){console.log(this.dataStore.toString().replace(/,/g,"\n"));return this}this.getCurElement=function(){return this.listSize===0?false:this.dataStore[this.pos-1]}this.length=function(){return this.listSize}this.append=function(ob){this.dataStore.push(ob);this.listSize++;return this}this.insert=function(ob){var that=this;(function(){for(var i=(that.listSize-1);i>(that.pos-1);i--){that.dataStore[i+1]=that.dataStore[i]}})();that.dataStore[that.pos]=ob;that.listSize++;that.pos++;return this}this.find=function(ob){var _index=0;var that=this;(function(){for(var i=0;i<that.listSize;i++){if(that.dataStore[i]===ob){_index=i+1}}})();this.pos=_index;return _index}this.remove=function(ob){var _index=this.find(ob);var that=this;(function(){for(var i=_index-1;i<that.listSize-1;i++){that.dataStore[i]=that.dataStore[i+1]}})();this.dataStore.pop();this.listSize--;if(this.pos>1)this.pos--}this.next=function(){if(this.pos<this.listSize)this.pos++;return this}this.last=function(){if(this.pos>1)this.pos--;return this}this.moveTo=function(index){if(index>0&&index<=this.listSize){this.pos=index;return this}else return false}this.hasNext=function(){return this.pos<this.listSize?true:false}this.hasLast=function(){return this.pos>1?true:false}}if(typeof module!="undefined"&&module!==null&&module.exports)module.exports=struct;else if(typeof define==="function"&&define.amd)define(function(){return struct});